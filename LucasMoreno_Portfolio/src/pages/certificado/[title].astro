---
import Layout from "../../layouts/Layout.astro";
import TitleComponent from "../../components/Utils/Font/Title.astro";
import TextContent from "../../components/Utils/Font/TextContent.jsx";
import Card from "../../components/Utils/Card/Card.astro";
import { certificates } from "../../data/certificates";
import experience from "../../components/Experience/experience";
import Link from "../../components/Utils/Link/Link.jsx";

// Generar rutas estÃ¡ticas
export async function getStaticPaths() {
  return certificates.map((certificate) => ({
    params: { title: encodeURIComponent(certificate.title.replace(/\s+/g, "-")) },
  }));
}

const params = Astro.params;

if (!params.title) {
  throw new Error("No title parameter provided");
}

const decodedTitle = decodeURIComponent(params.title);
const certificate = certificates.find(
  (c) =>
    c.title.toLowerCase() === decodedTitle.replace(/-/g, " ").toLowerCase()
);

if (!certificate) {
  throw new Error(`Certificate with title '${decodedTitle}' not found`);
}
---

<Layout title={`Certificado: ${certificate.title}`}>
  <main>
    <TitleComponent title={certificate.title} logo={certificate.logo} />
    <Card>
      <!-- Media superior -->
      <div class="mb-4 col-span-2 col-start-1 flex justify-center">
        {certificate.media && certificate.media.length > 0 ? (
          <img src={certificate.media[0]} alt={certificate.title} class="object-cover max-h-96" />
        ) : (
          null
        )}
      </div>

        <!-- Columna izquierda -->
        <div class="col-span-1 gap-6 px-6">
          {certificate.tags && (
            <div class="mb-4">
              <h3 class="font-bold text-lg">Tags</h3>
              <ul class="flex flex-wrap gap-2">
                {certificate.tags.map((tag) => (
                  <li class="px-2 py-1 bg-gray-200 rounded-full text-sm">{tag}</li>
                ))}
              </ul>
            </div>
          )}

          <div class="mb-4">
            <h3 class="font-bold text-lg">{certificate.title}</h3>
            <p class="mb-2 text-gray-400">
              {certificate.provider} / {certificate.date}
          </p>
            <TextContent content={certificate.description} />
          </div>
        </div>

        <!-- Columna derecha -->
        <div class="col-span-1 col-start-2 items-start gap-6 px-6">
          {certificate.certificateUrl && (
            <div>
                <Link url={certificate.certificateUrl} name={"Ver Certificado"} />
            </div>
          )}
          {certificate.credentials && (
            <div class="mt-4">
              <h3 class="font-bold text-lg">Credenciales</h3>
              <p>
                {certificate.credentials}
              </p>
            </div>
          )}
        </div>
      </div>
    </Card>
  </main>
</Layout>
